#!/bin/bash

list=$1
threads=256
#threadsX2=$((${threads}*2))

adni=/lus/theta-fs0/projects/AD_Brain_Imaging/anal/adni

CMD_batch=/lus/theta-fs0/projects/AD_Brain_Imaging/anal/adni/adni_on_alcf/job/cmd2.batch.trac.${list}
rm -rf $CMD_batch

#######################################################################################################
cat<<EOC >$CMD_batch
#!/bin/bash
#COBALT -t 6:00:00
#COBALT -n 250
#COBALT --attrs mcdram=cache:numa=quad
#COBALT -A AD_Brain_Imaging
echo start............................................

EOC
#######################################################################################################

i=1

for s in `cat /lus/theta-fs0/projects/AD_Brain_Imaging/anal/adni/fs/\$list`
do
#s=`echo $SUBJECT | egrep -o '[0-9]{8}'`
CMD=/lus/theta-fs0/projects/AD_Brain_Imaging/anal/adni/adni_on_alcf/job/cmd2.trac.${s}
rm -rf $CMD

SUBJECT=${s}
rm ./job/log.tckgen.${SUBJECT}

#echo ${SUBJECT}

cat<<EOF >$CMD
#!/bin/bash
source ~/.bashrc
workingdir=/lus/theta-fs0/projects/AD_Brain_Imaging/anal/adni/fs/${SUBJECT}/dmri2
echo \$workingdir
cd \$workingdir
pwd
ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=$threads
echo beginning of the code \`date +"%Y-%m-%d/%H:%M:%S"\`



echo preprocessing is done \`date +"%Y-%m-%d/%H:%M:%S"\`

SUBJECT=${s}
cd /lus/theta-fs0/projects/AD_Brain_Imaging/anal/adni/fs/\${SUBJECT}/dmri2
mkdir xfm

echo now ready for tckgen \`date +"%Y-%m-%d/%H:%M:%S"\`

echo resizing WM_FODs.mif.gz, nodes_aparc+aseg2 nodes_aparc.a2009s+aseg2
mrresize WM_FODs.mif.gz -voxel 1.25 WM_FODs_upsample125.mif.gz \
     	-force -interp sinc -nthreads $threads

mrresize nodes_aparc+aseg2.mif.gz -voxel 1.25 nodes_aparc+aseg2_upsample125.mif.gz \
        -force -interp sinc -nthreads $threads

mrresize nodes_aparc.a2009s+aseg2.mif.gz -voxel 1.25 nodes_aparc.a2009s+aseg2_upsample125.mif.gz \
        -force -interp sinc -nthreads $threads

mrresize 5tt2.mif.gz -voxel 1.25 5tt2_upsample125.mif.gz \
        -force -interp sinc -nthreads $threads

  tckgen WM_FODs_upsample125.mif.gz  mr_track_20M2_${s}_upsample125.tck -act 5tt2_upsample125.mif.gz -backtrack -crop_at_gmwmi -seed_dynamic WM_FODs_upsample125.mif.gz -angle 22.5 -maxlength 250 -minlength 10 -power 1.0 -select 20M -force -nthreads $threads
  sleep 0.2

#  tcksift -act 5tt2_upsample125.mif.gz mr_track_20M2_${s}_upsample125.tck WM_FODs_upsample125.mif.gz mr_track_10M_SIFT2_${s}_upsample125.tck -term_number 10M -force -nthreads $threads && echo 'sift done'*******
#  sleep 0.2

#  echo 'sift done'*******


#for im in aparc+aseg aparc.a2009s+aseg
#do
##1.count
#tck2connectome -force -zero_diagonal -nthreads ${threads} \
#            mr_track_10M_SIFT2_${s}_upsample125.tck \
#            nodes_\${im}2_upsample125.mif.gz \
#            mr_connectome_sift_10M_\${im}_upsample125_count.csv

##2.length
#tck2connectome -force -zero_diagonal -scale_length -stat_edge mean \
#  mr_track_10M_SIFT2_${s}_upsample125.tck nodes_\${im}2_upsample125.mif.gz  \
#  mr_connectome_sift_10M_\${im}_upsample125_length.csv -nthreads ${threads}

#done

#############################################################MRTRIX########################
EOF

chmod +x $CMD




echo "aprun -n 1 -N 1 -d 256 -j 4 -cc depth -e OMP_NUM_THREADS=256 $CMD > ./job/log.tckgen.${SUBJECT} 2>&1 &">>$CMD_batch
echo "sleep 3">>$CMD_batch
i=$(($i+1))
echo $i
#echo "execute $CMD_sub"

done

echo "wait" >> $CMD_batch
### batch submission

echo $CMD_batch
chmod +x $CMD_batch
echo "qsub $CMD_batch"
